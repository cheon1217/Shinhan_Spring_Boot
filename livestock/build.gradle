plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    queryDslVersion = "5.1.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === 기본 Spring Boot 스타터 ===
    implementation 'org.springframework.boot:spring-boot-starter-web'           // REST API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'      // JPA
    implementation 'org.springframework.boot:spring-boot-starter-security'      // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-validation'    // @Valid 유효성 검증
    implementation 'org.springframework.boot:spring-boot-starter-websocket'     // WebSocket/STOMP

    // === 외부 WebSocket 클라이언트 ===
    implementation 'org.java-websocket:Java-WebSocket:1.5.6'
    // === Lombok ===
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // === DB ===
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'                           // MariaDB Driver

    // === JWT ===
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // === JSON 직렬화/역직렬화 ===
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // === 외부 API 호출 ===
    implementation 'org.springframework.boot:spring-boot-starter-webflux'       // WebClient
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'                          // OkHttp (선택)

    // === 향후 확장 고려 ===
    implementation 'org.springframework.boot:spring-boot-starter-cache'         // 캐시
    implementation 'org.springframework.boot:spring-boot-starter-actuator'      // 모니터링
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
            "jakarta.annotation:jakarta.annotation-api",
            "jakarta.persistence:jakarta.persistence-api"
    )

    // === 개발 편의 ===
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // === 테스트 ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
